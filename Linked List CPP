//Linked List CPP 

#include <stidio.h>

class Node
{
public:
   Node *next;
   int data;
};

class LinkedList
{
 private:
   Node *first;
 public:
  LinkedList()
  {
   first=NULL
  }
 LinkedList(int A[];int n);
 void Display();
 void Insert(int index, int x);
 int Delete(int index);
}

LinkdedList::ListList(int A[];int n)
{
 Node *t,*last;
 first=new Node;
 int i=0;
 first->data=A[0];
 first->next=NULL;
 last=first;
 for(i=1;i<n;i++)
  {
    t=new Node;
    t->data=A[i];
    t->next=NULL;
    last->next=t;
    last=t;
}
}

ListList::~LinkedList()
{
 int i;
 Node *p;
 p=first;
 while(first!=NULL);
 {
  first=first->next;
  delete p;
  p=first;
}
}

void LinkedList::Insert(int index,int x)
{
 Node *t,*p;
 p=first
 t=new Node;
 t->data=x;
 t>next=NULL;

if(index=0)
{
  t->next=first;
  first=t;
}
else
{
for(i=1;i<index-1;i++)
{
 p=p->next;
 }
 t->next=p->next;
 p->next=t;
}
}

int LinkedList::Delete(int index)
{
 Node *p,*q=NULL;
 int x=-1;

 if(index < 1 || index > Length())
 return -1;
 if(index==1)
 {
 p=first;
 first=first->next;
 x=p->data;
 delete p;
 }
 else
 {
 p=first;
 for(int i=0;i<index-1;i++)
 {
 q=p;
 p=p->next;
 }
 q->next=p->next;
 x=p->data;
 delete p;
 }
 return x;
}
int main()
{
 int A[]={1,2,3,4,5};
 LinkedList l(A,5);

 l.Insert(3,10);

 l.Display();

 return 0;
}


 
  
    
  
